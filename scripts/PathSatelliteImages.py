import pandas as pd
import matplotlib.pyplot as plt
import plotly.express as px
import os

# ---------------------------------------------------------------
# Load coordinate + terrain CSV (generated by TerrainPath.py)
# Replace 'your_file_name.csv' with the actual CSV you generated
# ---------------------------------------------------------------
df = pd.read_csv('coordinates/your_file_name.csv', index_col=0)

# Extract values as Python lists
lat = df['Lat'].tolist()
lon = df['Lon'].tolist()
terrain = df["Terrain"].tolist()

# ---------------------------------------------------------------
# Set output directory for saving satellite images
# ---------------------------------------------------------------
output_dir = 'images/your_folder'  # <-- Change this to match your naming
os.makedirs(output_dir, exist_ok=True)

# ---------------------------------------------------------------
# Loop through all points and save a satellite image if on land
# ---------------------------------------------------------------
for point in range(len(df)): 
    if terrain[point] == 'Land':  # Only download for land points

        # Create Mapbox satellite image using Plotly
        fig = px.scatter_mapbox(
            lat=[lat[point]],
            lon=[lon[point]],
            zoom=17,               # High zoom for detail
            height=800,
            width=800
        )

        # Add Mapbox satellite style (you must provide your access token)
        fig.update_layout(
            mapbox_style="mapbox://styles/mapbox/satellite-v9",
            mapbox_accesstoken="your_access_token"  # 🔐 Replace with your Mapbox token
        )
        fig.update_layout(margin={"r": 0, "t": 0, "l": 0, "b": 0})

        # Close matplotlib figures to avoid memory buildup
        plt.close('all')

        # Save the map as a PNG file
        fig.write_image(f"{output_dir}/fig{point}.png")

        # Print progress update
        print(f"Figure {point} saved.")
